buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.5.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

// 하위 build.gradle 에 공통적으로 적용될 스크립트
subprojects {
    group = 'nr'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

    ext {
        set('springBootAdminVersion', "2.4.3")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        // lombok, mapstruct - https://github.com/mapstruct/mapstruct
        implementation 'org.mapstruct:mapstruct:1.4.2.Final'
        //compileOnly 'org.projectlombok:lombok'
        implementation 'org.projectlombok:lombok'   // Runtime에 Slf4j 쓰기 때문

        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        // lombok 과 mapstruct 순서 중요함(builder 패턴 사용 위해)
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }

    dependencyManagement {
        imports {
            mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    test {
        useJUnitPlatform()
    }
}

project(':common') {
    dependencies {
        implementation project(':core')
    }
}

project(':domain:db') {
    dependencies {
        implementation project(':core')
        implementation project(':core:cache-redis')
        implementation project(':core:mapper')
    }
}

project(':domain:redis') {
    dependencies {
        implementation project(':core')
        implementation project(':core:mapper')
    }
}

project(':game') {
    dependencies {
        implementation project(':core')
        implementation project(':core:cache-redis')
        implementation project(':core:mapper')
        implementation project(':common')
        implementation project(':common:design')
        implementation project(':domain:db')
        implementation project(':domain:redis')
    }
}

project(':admin') {
    dependencies {
    }
}