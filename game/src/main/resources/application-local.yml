server:
  port: 9080

spring:
  config:
    activate:
      on-profile: "local"

  datasource:
    game:
      master:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://sl-db-011:3306/ZCOMSY?characterEncoding=utf8&serverTimezone=Asia/Seoul
        username: red_database
        password: 123qwe
        max-lifetime: 30000 # 30000ms(30초, hikari min) 동안 사용안한 connection 풀에서 제거 - 컴투스기준 5초(wait_timeout) - 이거 높여야함.
        leak-detection-threshold: 5000
      slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://sl-db-011:3306/ZCOMSY_SLAVE?characterEncoding=utf8&serverTimezone=Asia/Seoul
        username: red_database
        password: 123qwe
        max-lifetime: 30000 # 30000ms(30초, hikari min) 동안 사용안한 connection 풀에서 제거 - 컴투스기준 5초(wait_timeout) - 이거 높여야함.
        leak-detection-threshold: 5000
    log:
      master:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://sl-db-011:3306/ZCOMSY_LOG?characterEncoding=utf8&serverTimezone=Asia/Seoul
        username: red_database
        password: 123qwe
        max-lifetime: 30000 # 30000ms(30초, hikari min) 동안 사용안한 connection 풀에서 제거 - 컴투스기준 5초(wait_timeout) - 이거 높여야함.
        leak-detection-threshold: 5000
      slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://sl-db-011:3306/ZCOMSY_LOG?characterEncoding=utf8&serverTimezone=Asia/Seoul
        username: red_database
        password: 123qwe
        max-lifetime: 30000 # 30000ms(30초, hikari min) 동안 사용안한 connection 풀에서 제거 - 컴투스기준 5초(wait_timeout) - 이거 높여야함.
        leak-detection-threshold: 5000

  jpa:
    hibernate:
      #naming:
        #physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        #implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
      ddl-auto: update
      use-new-id-generator-mappings: false # IDENTITY : auto increment

    properties:
      hibernate:
        #show_sql: true
        format_sql: true
        default_batch_fetch_size: 100

  cache:
    redis:
      cache-null-values: false
      time-to-live: 1D


  # redis db 사용 안함 - 클러스터 사용 시 db 사용 못함
  redis:
#    host: sl-redis-01
#    port: 6379
    cache:
      host: sl-redis-01
      port: 6379
      ttl: 86400  # 단위 초(s)
    data:
      host: sl-redis-01
      port: 6379







logging:
  level:
    root: INFO
    web: INFO
    sql: INFO
    was: DEBUG
    hikari: INFO  # DEBUG 시 풀 내 connecton, close 정보 볼 수 있음.

sentry:
  dsn: https://3f0d7a32b63c4c0f8e12df4baecc4edf@o921467.ingest.sentry.io/5867907
  #exception-resolver-order: 2147483647
  environment: local
  logging:
    enabled: true
    minimum-event-level: warn
    minimum-breadcrumb-level: warn



#CUSTOM

fluentd:
  defaults:
    host: localhost
    port: 24224
    tag: spring.fluentd
  dw:
    host: localhost
    port: 24224
    tag: was.dw

# LOGBACK CONFIG
logback:
  config.charset: UTF-8
  console.pattern: "%clr(%5p) %clr(%d{yy-MM-dd HH:mm:ss}){magenta}[%thread] [%clr(%logger{0}){cyan}:%line] - %msg%n"
  file:
    path: log/local/
    name: file.log
    pattern: "%clr(%5p) %clr(%d{yy-MM-dd HH:mm:ss}){magenta}[%thread] [%clr(%logger{35}){cyan}:%line] - %msg%n"
    rolling_policy:
      file_name_pattern: "file.%d{yyyy-MM-dd}-%i.gz"
      max_file_size: 100MB
      max_history: 30
  access:
    path: log/local/
    name: access.log
    pattern: "%msg%n"
    rolling_policy:
      file_name_pattern: "access.%d{yyyy-MM-dd}-%i.gz"
      max_file_size: 100MB
      max_history: 30